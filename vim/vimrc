call plug#begin('~/.vim/plugged')

Plug 'Shougo/neocomplete.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'kien/ctrlp.vim'
Plug 'mileszs/ack.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sensible'

call plug#end()

" NEOCOMPLETE CONFIG
let g:neocomplete#enable_at_startup = 1

" CTRL+P
if executable("ag")
  let g:ctrlp_user_command = 'ag %s -i -l --nocolor -g ""'
end

" IF GUI RUNNING
if has("gui_running")
  set noanti
  set guifont=monaco:h13
endif

" SET THEME
set background=dark
try
  color Tomorrow-Night-Eighties
catch
endtry

" GENERAL {
set colorcolumn=80
set showcmd
" }

" INDENTING {
set tabstop=2
set shiftwidth=2
set softtabstop=2
set smartindent
set smarttab
set expandtab
set copyindent
" }

" REMAP
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
map <leader>n :NERDTreeToggle<CR>           " map nerdtree to ctrl+n

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_ruby_checkers = ['rubocop']

" RUBY
autocmd FileType ruby setlocal shiftwidth=2 tabstop=2
" JS
autocmd FileType javascript setlocal shiftwidth=2 tabstop=2
" COFFEE
autocmd FileType coffee setlocal shiftwidth=2 tabstop=2
" Strip trailing whitespace
autocmd FileType * autocmd BufWritePre <buffer> call StripTrailingWhitespace()
" Strip trailing blank lines
autocmd filetype c,cpp,java,go,php,javascript,perl,puppet,python,ruby,rust,twig,vim,xml,yml autocmd BufWritePre <buffer> call StripTrailingNewline()

" Save state and run cmd {
function! RunCmd(cmd)
  " Save the last search
  let last_search=@/
  " Save the current cursor position
  let save_cursor = getpos(".")
  " Save the window position
  normal H
  let save_window = getpos(".")
  call setpos('.', save_cursor)

  " Do the business:
  execute a:cmd

  " Restore the last_search
  let @/=last_search
  " Restore the window position
  call setpos('.', save_window)
  normal zt
  " Restore the cursor position
  call setpos('.', save_cursor)
endfunction
" }

" Strip whitespace {
function! StripTrailingWhitespace()
  call RunCmd('silent %s/\s\+$//e')
endfunction
" }

" Strip trailing newline {
function! StripTrailingNewline()
  call RunCmd('%s/\($\n\s*\)\+\%$//e')
endfunction
" }
